FROM maven:3.6.3-jdk-8-slim AS imageWithDependencies

# We first copy the pom.xml file and the binaries stored in the source repository.
# This way, we retrieve all maven dependencies at the beginning. All these steps will be cached by Docker unless pom.xml or libs/ has been updated.
# This means that we only retrieve all dependencies if we modify the dependencies definition.

COPY ./pom.xml /app/pom.xml

RUN cd /app && \
    mvn -f /app/pom.xml -s /usr/share/maven/ref/settings-docker.xml de.qaware.maven:go-offline-maven-plugin:resolve-dependencies -B

FROM imageWithDependencies

RUN apt-get update && apt-get install -y gnupg

COPY . /app

ARG VERSION_NUMBER
ARG GPG_KEYNAME
ARG GPG_PASSPHRASE
ARG OSSRH_USER
ARG OSSRH_PASSWORD

ENV VERSION_NUMBER_ENV=$VERSION_NUMBER
ENV GPG_KEYNAME=$GPG_KEYNAME
ENV GPG_PASSPHRASE=$GPG_PASSPHRASE
ENV OSSRH_USER=$OSSRH_USER
ENV OSSRH_PASSWORD=$OSSRH_PASSWORD



# update version number in pom.xml
RUN sed -i -- 's/<version>0.0.0<\/version>/<version>'$VERSION_NUMBER'<\/version>/g' /app/pom.xml
RUN sed -i -- 's/$GPG_KEYNAME/'$GPG_KEYNAME'/g' /app/scripts/maven-settings.xml
RUN sed -i -- 's/$GPG_PASSPHRASE/'$GPG_PASSPHRASE'/g' /app/scripts/maven-settings.xml
RUN sed -i -- 's/$OSSRH_USER/'$OSSRH_USER'/g' /app/scripts/maven-settings.xml
RUN sed -i -- 's/$OSSRH_PASSWORD/'$OSSRH_PASSWORD'/g' /app/scripts/maven-settings.xml

RUN cat /app/scripts/maven-settings.xml
RUN cat /app/pom.xml


#RUN mvn -f /app/pom.xml -s /app/scripts/maven-settings.xml --batch-mode package

RUN cat /app/ci/PRIVATE_KEY.gpg
RUN gpg --import --armor --no-tty --batch --yes /app/ci/PUBLIC_KEY.gpg
RUN gpg --import --armor --allow-secret-key-import --no-tty --batch --yes /app/ci/PRIVATE_KEY.gpg
RUN gpg --list-keys

RUN mvn -f /app/pom.xml -s /app/scripts/maven-settings.xml clean deploy -DskipTests=true